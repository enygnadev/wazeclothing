~/workspace$ tsc --noEmit
app/api/chat/route.ts:34:33 - error TS2345: Argument of type 'Stream<ChatCompletionChunk> & { _request_id?: string | null | undefined; }' is not assignable to parameter of type 'Response | AsyncIterableOpenAIStreamReturnTypes'.
  Type 'Stream<ChatCompletionChunk> & { _request_id?: string | null | undefined; }' is not assignable to type 'AsyncIterable<AzureChatCompletions>'.
    The types returned by '[Symbol.asyncIterator]().next(...)' are incompatible between these types.
      Type 'Promise<IteratorResult<ChatCompletionChunk, any>>' is not assignable to type 'Promise<IteratorResult<AzureChatCompletions, any>>'.
        Type 'IteratorResult<ChatCompletionChunk, any>' is not assignable to type 'IteratorResult<AzureChatCompletions, any>'.
          Type 'IteratorYieldResult<ChatCompletionChunk>' is not assignable to type 'IteratorResult<AzureChatCompletions, any>'.
            Type 'IteratorYieldResult<ChatCompletionChunk>' is not assignable to type 'IteratorYieldResult<AzureChatCompletions>'.
              Property 'promptFilterResults' is missing in type 'ChatCompletionChunk' but required in type 'AzureChatCompletions'.

34     const stream = OpenAIStream(response)
                                   ~~~~~~~~

  node_modules/ai/dist/index.d.ts:362:5
    362     promptFilterResults: any[];
            ~~~~~~~~~~~~~~~~~~~
    'promptFilterResults' is declared here.

components/admin/order-details-modal.tsx:174:57 - error TS2339: Property 'title' does not exist on type 'CartItem'.

174                       <h4 className="font-medium">{item.title}</h4>
                                                            ~~~~~

components/admin/orders-manager.tsx:115:35 - error TS2339: Property 'title' does not exist on type 'CartItem'.

115                       <span>{item.title} x {item.quantity}</span>
                                      ~~~~~

components/admin/product-manager.tsx:158:22 - error TS2339: Property 'title' does not exist on type 'Product'.

158       title: product.title,
                         ~~~~~

components/admin/product-manager.tsx:159:7 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

159       description: product.description,
          ~~~~~~~~~~~

components/admin/product-manager.tsx:302:28 - error TS2339: Property 'title' does not exist on type 'Product'.

302                   {product.title}
                               ~~~~~

components/admin/product-manager.tsx:309:88 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

309                 <p className="text-sm text-muted-foreground">Tamanho: {resolveSizeName(product.size)}</p>
                                                                                           ~~~~~~~~~~~~

components/admin/users-manager.tsx:11:20 - error TS2305: Module '"@/lib/firebase/users"' has no exported member 'deleteUser'.

11 import { getUsers, deleteUser, updateUserRole } from "@/lib/firebase/users"
                      ~~~~~~~~~~

components/admin/users-manager.tsx:49:36 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'boolean'.
  Type 'string' is not assignable to type 'boolean'.

49       await updateUserRole(userId, newRole as 'admin' | 'customer')
                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

components/cart/cart-item.tsx:15:11 - error TS2339: Property 'updateItemQuantity' does not exist on type 'CartContextType'.

15   const { updateItemQuantity, removeItem } = useCart()
             ~~~~~~~~~~~~~~~~~~

components/cart/cart-item.tsx:21:21 - error TS2551: Property 'product' does not exist on type 'CartItem'. Did you mean 'productId'?

21           src={item.product.image || "/placeholder.svg?height=64&width=64"}
                       ~~~~~~~

  lib/types.ts:20:3
    20   productId: string
         ~~~~~~~~~
    'productId' is declared here.

components/cart/cart-item.tsx:22:21 - error TS2551: Property 'product' does not exist on type 'CartItem'. Did you mean 'productId'?

22           alt={item.product.title}
                       ~~~~~~~

  lib/types.ts:20:3
    20   productId: string
         ~~~~~~~~~
    'productId' is declared here.

components/cart/cart-item.tsx:29:64 - error TS2551: Property 'product' does not exist on type 'CartItem'. Did you mean 'productId'?

29         <h4 className="text-sm font-medium line-clamp-2">{item.product.title}</h4>
                                                                  ~~~~~~~

  lib/types.ts:20:3
    20   productId: string
         ~~~~~~~~~
    'productId' is declared here.

components/cart/cart-item.tsx:30:63 - error TS2551: Property 'product' does not exist on type 'CartItem'. Did you mean 'productId'?

30         <p className="text-sm text-muted-foreground">R$ {item.product.price.toFixed(2)}</p>
                                                                 ~~~~~~~

  lib/types.ts:20:3
    20   productId: string
         ~~~~~~~~~
    'productId' is declared here.

components/cart/cart.tsx:13:11 - error TS2339: Property 'items' does not exist on type 'CartContextType'.

13   const { items, isOpen, setIsOpen, getTotalPrice, clearCart } = useCart()
             ~~~~~

components/cart/cart.tsx:13:18 - error TS2339: Property 'isOpen' does not exist on type 'CartContextType'.

13   const { items, isOpen, setIsOpen, getTotalPrice, clearCart } = useCart()
                    ~~~~~~

components/cart/cart.tsx:13:26 - error TS2339: Property 'setIsOpen' does not exist on type 'CartContextType'.

13   const { items, isOpen, setIsOpen, getTotalPrice, clearCart } = useCart()
                            ~~~~~~~~~

components/cart/cart.tsx:48:35 - error TS7006: Parameter 'item' implicitly has an 'any' type.

48                   {safeItems.map((item) => (
                                     ~~~~

components/cart/checkout.tsx:31:11 - error TS2339: Property 'items' does not exist on type 'CartContextType'.

31   const { items: cartItems, getTotalPrice, clearCart } = useCart()
             ~~~~~

components/cart/checkout.tsx:114:24 - error TS7006: Parameter 'item' implicitly has an 'any' type.

114     cartItems.forEach((item, index) => {
                           ~~~~

components/cart/checkout.tsx:114:30 - error TS7006: Parameter 'index' implicitly has an 'any' type.

114     cartItems.forEach((item, index) => {
                                 ~~~~~

components/cart/checkout.tsx:154:40 - error TS7006: Parameter 'item' implicitly has an 'any' type.

154       const orderItems = cartItems.map(item => ({
                                           ~~~~

components/cart/checkout.tsx:181:25 - error TS2345: Argument of type '{ userId: string; items: any; total: number; shippingFee: number; status: "pending"; customerInfo: { name: string; email: string; phone: string; address: string; cep: string; numero: string; complemento: string; }; paymentMethod: "pix" | "whatsapp"; createdAt: Date; }' is not assignable to parameter of type 'Omit<Order, "id">'.
  Property 'updatedAt' is missing in type '{ userId: string; items: any; total: number; shippingFee: number; status: "pending"; customerInfo: { name: string; email: string; phone: string; address: string; cep: string; numero: string; complemento: string; }; paymentMethod: "pix" | "whatsapp"; createdAt: Date; }' but required in type 'Omit<Order, "id">'.

181       await createOrder(order)
                            ~~~~~

  lib/types.ts:54:3
    54   updatedAt: Date
         ~~~~~~~~~
    'updatedAt' is declared here.

components/cart/checkout.tsx:356:31 - error TS7006: Parameter 'item' implicitly has an 'any' type.

356               {cartItems.map((item) => (
                                  ~~~~

components/client/customer-dashboard.tsx:145:63 - error TS2339: Property 'title' does not exist on type 'CartItem'.

145                               <span className="text-sm">{item.title} x {item.quantity}</span>
                                                                  ~~~~~

components/layout/header.tsx:29:24 - error TS2339: Property 'itemCount' does not exist on type 'CartContextType'.

29       itemCount = cart.itemCount ?? 0
                          ~~~~~~~~~

components/layout/header.tsx:30:24 - error TS2339: Property 'setIsOpen' does not exist on type 'CartContextType'.

30       setIsOpen = cart.setIsOpen
                          ~~~~~~~~~

components/products/product-card.tsx:19:20 - error TS2339: Property 'setIsOpen' does not exist on type 'CartContextType'.

19   const { addItem, setIsOpen } = useCart()
                      ~~~~~~~~~

components/products/product-card.tsx:43:63 - error TS2339: Property 'title' does not exist on type 'Product'.

43       console.log("Adicionando produto ao carrinho:", product.title)
                                                                 ~~~~~

components/products/product-card.tsx:45:21 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'Product'.

45       await addItem(product.id)
                       ~~~~~~~~~~

components/products/product-card.tsx:51:33 - error TS2339: Property 'title' does not exist on type 'Product'.

51         description: `${product.title} foi adicionado ao carrinho.`,
                                   ~~~~~

components/products/product-card.tsx:71:26 - error TS2339: Property 'title' does not exist on type 'Product'.

71             alt={product.title}
                            ~~~~~

components/products/product-card.tsx:103:22 - error TS2339: Property 'title' does not exist on type 'Product'.

103             {product.title}
                         ~~~~~

components/products/product-card.tsx:169:75 - error TS2339: Property 'title' does not exist on type 'Product'.

169               const message = `Olá! Tenho interesse no produto *${product.title}* (R$ ${product.price.toFixed(2)}). Você pode me dar mais informações?`
                                                                              ~~~~~

components/products/product-grid.tsx:78:32 - error TS18046: 'error' is of type 'unknown'.

78           const errorMessage = error.message || error.toString()
                                  ~~~~~

components/products/product-grid.tsx:78:49 - error TS18046: 'error' is of type 'unknown'.

78           const errorMessage = error.message || error.toString()
                                                   ~~~~~


Found 36 errors in 12 files.

Errors  Files
     1  app/api/chat/route.ts:34
     1  components/admin/order-details-modal.tsx:174
     1  components/admin/orders-manager.tsx:115
     4  components/admin/product-manager.tsx:158
     2  components/admin/users-manager.tsx:11
     5  components/cart/cart-item.tsx:15
     4  components/cart/cart.tsx:13
     6  components/cart/checkout.tsx:31
     1  components/client/customer-dashboard.tsx:145
     2  components/layout/header.tsx:29
     7  components/products/product-card.tsx:19
     2  components/products/product-grid.tsx:78
~/workspace$ tsc --noEmit
app/api/chat/route.ts:34:33 - error TS2345: Argument of type 'Stream<ChatCompletionChunk> & { _request_id?: string | null | undefined; }' is not assignable to parameter of type 'Response | AsyncIterableOpenAIStreamReturnTypes'.
  Type 'Stream<ChatCompletionChunk> & { _request_id?: string | null | undefined; }' is not assignable to type 'AsyncIterable<AzureChatCompletions>'.
    The types returned by '[Symbol.asyncIterator]().next(...)' are incompatible between these types.
      Type 'Promise<IteratorResult<ChatCompletionChunk, any>>' is not assignable to type 'Promise<IteratorResult<AzureChatCompletions, any>>'.
        Type 'IteratorResult<ChatCompletionChunk, any>' is not assignable to type 'IteratorResult<AzureChatCompletions, any>'.
          Type 'IteratorYieldResult<ChatCompletionChunk>' is not assignable to type 'IteratorResult<AzureChatCompletions, any>'.
            Type 'IteratorYieldResult<ChatCompletionChunk>' is not assignable to type 'IteratorYieldResult<AzureChatCompletions>'.
              Property 'promptFilterResults' is missing in type 'ChatCompletionChunk' but required in type 'AzureChatCompletions'.

34     const stream = OpenAIStream(response)
                                   ~~~~~~~~

  node_modules/ai/dist/index.d.ts:362:5
    362     promptFilterResults: any[];
            ~~~~~~~~~~~~~~~~~~~
    'promptFilterResults' is declared here.

components/admin/product-manager.tsx:309:88 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

309                 <p className="text-sm text-muted-foreground">Tamanho: {resolveSizeName(product.size)}</p>
                                                                                           ~~~~~~~~~~~~

components/admin/users-manager.tsx:11:20 - error TS2305: Module '"@/lib/firebase/users"' has no exported member 'deleteUser'.

11 import { getUsers, deleteUser, updateUserRole } from "@/lib/firebase/users"
                      ~~~~~~~~~~

components/admin/users-manager.tsx:49:36 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'boolean'.
  Type 'string' is not assignable to type 'boolean'.

49       await updateUserRole(userId, newRole as 'admin' | 'customer')
                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

components/cart/cart.tsx:48:41 - error TS2749: 'CartItem' refers to a value, but is being used as a type here. Did you mean 'typeof CartItem'?

48                   {safeItems.map((item: CartItem) => (
                                           ~~~~~~~~

components/cart/checkout.tsx:115:40 - error TS2551: Property 'product' does not exist on type 'CartItem'. Did you mean 'productId'?

115       message += `${index + 1}. ${item.product.title}\n`
                                           ~~~~~~~

  lib/types.ts:20:3
    20   productId: string
         ~~~~~~~~~
    'productId' is declared here.

components/cart/checkout.tsx:117:48 - error TS2551: Property 'product' does not exist on type 'CartItem'. Did you mean 'productId'?

117       message += `   Valor unitário: R$ ${item.product.price.toFixed(2)}\n`
                                                   ~~~~~~~

  lib/types.ts:20:3
    20   productId: string
         ~~~~~~~~~
    'productId' is declared here.

components/cart/checkout.tsx:118:43 - error TS2551: Property 'product' does not exist on type 'CartItem'. Did you mean 'productId'?

118       message += `   Subtotal: R$ ${(item.product.price * item.quantity).toFixed(2)}\n\n`
                                              ~~~~~~~

  lib/types.ts:20:3
    20   productId: string
         ~~~~~~~~~
    'productId' is declared here.

components/cart/checkout.tsx:156:21 - error TS2551: Property 'product' does not exist on type 'CartItem'. Did you mean 'productId'?

156         title: item.product.title,
                        ~~~~~~~

  lib/types.ts:20:3
    20   productId: string
         ~~~~~~~~~
    'productId' is declared here.

components/cart/checkout.tsx:157:21 - error TS2551: Property 'product' does not exist on type 'CartItem'. Did you mean 'productId'?

157         price: item.product.price,
                        ~~~~~~~

  lib/types.ts:20:3
    20   productId: string
         ~~~~~~~~~
    'productId' is declared here.

components/cart/checkout.tsx:159:21 - error TS2551: Property 'product' does not exist on type 'CartItem'. Did you mean 'productId'?

159         image: item.product.image
                        ~~~~~~~

  lib/types.ts:20:3
    20   productId: string
         ~~~~~~~~~
    'productId' is declared here.

components/cart/checkout.tsx:181:25 - error TS2345: Argument of type '{ userId: string; items: { id: string; title: any; price: any; quantity: number; image: any; }[]; total: number; shippingFee: number; status: "pending"; customerInfo: { name: string; email: string; phone: string; address: string; cep: string; numero: string; complemento: string; }; paymentMethod: "pix" | "whatsapp";...' is not assignable to parameter of type 'Omit<Order, "id">'.
  Property 'updatedAt' is missing in type '{ userId: string; items: { id: string; title: any; price: any; quantity: number; image: any; }[]; total: number; shippingFee: number; status: "pending"; customerInfo: { name: string; email: string; phone: string; address: string; cep: string; numero: string; complemento: string; }; paymentMethod: "pix" | "whatsapp";...' but required in type 'Omit<Order, "id">'.

181       await createOrder(order)
                            ~~~~~

  lib/types.ts:55:3
    55   updatedAt: Date
         ~~~~~~~~~
    'updatedAt' is declared here.

components/cart/checkout.tsx:359:54 - error TS2551: Property 'product' does not exist on type 'CartItem'. Did you mean 'productId'?

359                     <p className="font-medium">{item.product.title}</p>
                                                         ~~~~~~~

  lib/types.ts:20:3
    20   productId: string
         ~~~~~~~~~
    'productId' is declared here.

components/cart/checkout.tsx:365:31 - error TS2551: Property 'product' does not exist on type 'CartItem'. Did you mean 'productId'?

365                     R$ {(item.product.price * item.quantity).toFixed(2)}
                                  ~~~~~~~

  lib/types.ts:20:3
    20   productId: string
         ~~~~~~~~~
    'productId' is declared here.

components/products/product-grid.tsx:78:32 - error TS18046: 'error' is of type 'unknown'.

78           const errorMessage = error.message || error.toString()
                                  ~~~~~

components/products/product-grid.tsx:78:49 - error TS18046: 'error' is of type 'unknown'.

78           const errorMessage = error.message || error.toString()
                                                   ~~~~~


Found 16 errors in 6 files.

Errors  Files
     1  app/api/chat/route.ts:34
     1  components/admin/product-manager.tsx:309
     2  components/admin/users-manager.tsx:11
     1  components/cart/cart.tsx:48
     9  components/cart/checkout.tsx:115
     2  components/products/product-grid.tsx:78